
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
public class VentanaPrincipal1 extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal1
     */
    public VentanaPrincipal1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(0, 0, 0));

        jMenu1.setBackground(new java.awt.Color(0, 0, 0));
        jMenu1.setText("Unidad 1");

        jCheckBoxMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Errores");
        jCheckBoxMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newpackage/system.png"))); // NOI18N
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("Salir");
        jCheckBoxMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newpackage/cross.png"))); // NOI18N
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        // TODO add your handling code here:
        double n1 = 0;
        double n2 = 0;
        double operacion = 0;
        double operacion2 = 0;
        int negativo = -1;
        double resultado = 0;

        JOptionPane.showMessageDialog(null, "Ingrese el valor verdadero");
        n1 = Double.parseDouble(JOptionPane.showInputDialog(null));
        JOptionPane.showMessageDialog(null, "Ingrese el valor aproximado");
        n2 = Double.parseDouble(JOptionPane.showInputDialog(null));

        operacion = n1 - n2;
        operacion2 = operacion / n1 * negativo;
        resultado = operacion * negativo;
        do {

            int op = Integer.parseInt(JOptionPane.showInputDialog(null, "Elija como desea las respuestas: " + "\n" + "1-Repuestas con truncamiento" + "\n" + "2-Respuestas con redondeo" + "\n" + "3-Respuestas normales" + "\n" + "4-Salir"));

            if (op == 1) {
                int op2 = Integer.parseInt(JOptionPane.showInputDialog(null, "¿Cuantos decimales quiere en las respuestas" + "\n" + "1" + "\n" + "2" + "\n" + "3" + "\n" + "4"+ "\n" +"5"+ "\n" +"6"+"\n"+"7"+ "\n" +"8"+"\n"+"9"+"\n"+"10"));

                
                switch (op2) {
                    case 1:
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR ABSOLUTO a 1 decimal es " + String.format("Valor: %.1f", resultado));
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR RELATIVO a 1 decimal es " + String.format("Valor: %.1f", operacion2));

                        break;
                    case 2:
                        JOptionPane.showMessageDialog(null, "El resultado truncado de ERROR ABSOLUTO a 2 decimales es " + String.format("Valor: %.2f", resultado));
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR RELATIVO a 2 decimales es " + String.format("Valor: %.2f", operacion2));

                        break;
                    case 3:
                        JOptionPane.showMessageDialog(null, "El resultado truncado de ERROR ABSOLUTO a 3 decimales es " + String.format("Valor: %.3f", resultado));
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR RELATIVO a 3 decimales es " + String.format("Valor: %.3f", operacion2));
                        break;
                    case 4:
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR ABSOLUTO a 4 decimales es " + String.format("Valor: %.4f", resultado));
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR RELATIVO a 4 decimales es " + String.format("Valor: %.4f", operacion2));
                            break;
                      case 5:
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR ABSOLUTO a 5 decimales es " + String.format("Valor: %.5f", resultado));
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR RELATIVO a 5 decimales es " + String.format("Valor: %.5f", operacion2));
                            break; 
                            case 6:
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR ABSOLUTO a 6 decimales es " + String.format("Valor: %.6f", resultado));
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR RELATIVO a 6 decimales es " + String.format("Valor: %.6f", operacion2));
                            break;
                            case 7:
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR ABSOLUTO a 7 decimales es " + String.format("Valor: %.7f", resultado));
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR RELATIVO a 7 decimales es " + String.format("Valor: %.7f", operacion2));
                            break;
                            case 8:
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR ABSOLUTO a 8 decimales es " + String.format("Valor: %.8f", resultado));
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR RELATIVO a 8 decimales es " + String.format("Valor: %.8f", operacion2));
                            break;
                            case 9:
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR ABSOLUTO a 9 decimales es " + String.format("Valor: %.9f", resultado));
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR RELATIVO a 9 decimales es " + String.format("Valor: %.9f", operacion2));
                            break;
                            case 10:
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR ABSOLUTO a 10 decimales es " + String.format("Valor: %.10f", resultado));
                        JOptionPane.showMessageDialog(null, "El resultado truncuado de ERROR RELATIVO a 10 decimales es " + String.format("Valor: %.10f", operacion2));
                            break;
                            
                }
            }
            if (op == 2) {
                JOptionPane.showMessageDialog(null, "El resultado redondeado de ERROR ABSOLUTO es: " + Math.round(resultado));
                JOptionPane.showMessageDialog(null, "El resultado redondeado de ERROR RELATIVO es: " + Math.round(operacion2));

            }
            if (op == 3) {

                JOptionPane.showMessageDialog(null, "El ERROR ABSOLUTO es: " + resultado);

                JOptionPane.showMessageDialog(null, "El ERROR RELATIVO es: " + operacion2);
            }
            if (op == 4) {
                JOptionPane.showMessageDialog(null, "Programa realizado por: "+"\n"+"-Henry Froylan Chuc Tec"+"\n"+"-Jose Natividad Tun Tun "+"\n"+"4°A");

                System.exit(0);
            }
        } while (rootPaneCheckingEnabled);
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
